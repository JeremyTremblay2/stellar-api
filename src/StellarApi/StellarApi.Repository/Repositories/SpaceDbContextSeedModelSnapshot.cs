// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StellarApi.Repository.Context;

#nullable disable

namespace StellarApi.Repository.Migrations
{
    [DbContext(typeof(SpaceDbContextSeed))]
    partial class SpaceDbContextSeedModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("StellarApi.Entities.CelestialObjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Brightness")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsLife")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsWater")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Mass")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanetType")
                        .HasColumnType("TEXT");

                    b.Property<double>("Radius")
                        .HasColumnType("REAL");

                    b.Property<string>("StarType")
                        .HasColumnType("TEXT");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("Position", "StellarApi.Entities.CelestialObjectEntity.Position#PositionEntity", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int?>("X")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("Y")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("Z")
                                .HasColumnType("INTEGER");
                        });

                    b.HasKey("Id");

                    b.ToTable("CelestialObject");
                });

            modelBuilder.Entity("StellarApi.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2018, 8, 18, 7, 22, 16, 0, DateTimeKind.Unspecified),
                            Email = "stellar-api@example.com",
                            ModificationDate = new DateTime(2019, 8, 18, 7, 22, 16, 0, DateTimeKind.Unspecified),
                            Password = "admin",
                            RefreshToken = "",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Administrator",
                            Username = "StellarApi"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
